package test;

import Std.parseInt;

using StringTools;
using buddy.Should;

@:access(Main)
class TestProcess extends buddy.BuddySuite{

	public function new() {

		describe( "Test process", {
			it( "Normal", { Main.process( normal ).should.be( 49 ); });
			it( "Small", { Main.process( small ).should.be( 624 ); });
			it( "Big", { Main.process( big ).should.be( 38958 ); });
			it( "Bigger", { Main.process( bigger ).should.be( 456445 ); });
			it( "Empty", { Main.process( empty ).should.be( 0 ); });
		});
	}

	static function parseInput( input:String ) {
		final lines = input.replace( "\t", "" ).replace( "\r", "" ).split( "\n" );
		
		return lines[1].split(" ").map( s -> parseInt( s ));
	}
	
	static function parseResult( input:String ) {
		return input.replace( "\t", "" ).replace( "\r", "" );
	}

	final normal = parseInput(
	"9
	1 8 6 2 5 4 8 3 7" );

	final small = parseInput(
	"20
	4 12 35 37 10 17 48 6 42 22 10 11 27 19 24 14 49 32 7 49" );

	final big = parseInput(
	"100
	316 135 299 167 240 236 337 469 328 423 134 424 317 490 206 107 488 373 369 307 325 431 19 204 245 329 273 202 427 284 298 354 298 392 322 277 11 26 32 77 35 124 438 493 48 434 186 367 95 386 351 369 276 385 30 460 341 203 22 309 176 409 7 339 164 385 445 360 383 479 369 54 217 214 80 395 30 183 166 379 338 185 369 44 162 59 201 381 126 129 96 125 212 453 198 12 68 213 152 255" );

	final bigger = parseInput(
	"500
	214 969 326 259 378 409 112 977 597 734 67 716 861 737 11 382 337 647 447 909 683 459 862 393 79 26 776 722 294 845 788 931 268 293 322 939 949 606 337 144 505 293 699 120 926 158 539 755 156 729 622 12 561 289 47 577 875 402 610 64 600 683 934 905 798 431 642 282 269 231 117 222 933 52 228 697 344 764 716 632 168 38 424 154 385 739 237 82 784 262 969 385 880 124 695 297 729 705 28 764 884 624 644 293 283 489 715 418 607 229 632 872 931 159 718 575 781 955 934 132 159 102 591 602 332 955 154 359 484 365 298 806 627 479 768 181 575 887 573 713 474 204 345 834 520 117 234 777 225 742 890 296 211 510 882 618 328 97 123 665 824 425 842 100 335 425 297 738 363 648 356 315 397 974 310 696 599 38 904 659 159 942 114 238 687 825 161 914 219 425 129 648 820 27 130 895 645 825 857 401 616 420 499 239 167 56 916 516 597 723 349 885 329 809 733 365 983 162 130 651 136 955 640 728 761 189 479 821 835 313 944 758 74 858 335 589 145 53 228 846 925 102 69 578 519 823 819 926 19 456 558 400 408 317 659 605 835 550 980 954 700 514 640 598 882 165 510 984 529 328 139 85 314 593 759 734 803 842 461 422 192 904 140 909 1 888 134 714 216 762 856 706 120 550 158 711 932 220 851 105 618 998 285 401 986 144 650 132 739 901 277 691 57 884 481 605 836 450 36 694 923 502 37 753 584 622 699 408 165 499 42 974 687 380 13 388 697 206 698 513 588 609 311 875 151 602 791 870 303 969 999 639 668 194 137 180 939 502 142 852 50 262 168 477 514 858 122 993 393 698 218 717 926 109 50 676 754 795 229 610 181 518 903 113 441 45 907 118 122 332 543 84 410 651 128 934 499 454 0 835 621 357 429 637 314 238 903 733 364 651 837 118 142 800 636 507 443 804 152 800 173 660 375 836 787 541 429 923 538 201 684 736 419 629 1000 760 438 855 600 898 683 620 391 569 348 112 215 944 767 853 633 121 244 172 715 614 413 723 921 49 98 47 399 505 380 208 391 281 448 888 92 410 426 172 965 802 800 570 435 237 883 22 57 8 944 414 761 791 23 447 86 586 484 396 827 99 892 727 598 807" );

	final empty = parseInput(
	"2
	0 10" );
	
}
