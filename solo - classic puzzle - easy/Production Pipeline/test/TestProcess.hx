package test;

import Std.parseInt;
import test.Readline.initReadline;
import test.Readline.readline;

using StringTools;
using buddy.Should;

@:access(Main)
class TestProcess extends buddy.BuddySuite{

	public function new() {

		describe( "Test process", {
			
			it( "Test 1", {
				final ip = test1;
				Main.process( ip.n, ip.constraints ).should.be( test1Result );
			});
			it( "Test 2", {
				final ip = test2;
				Main.process( ip.n, ip.constraints ).should.be( test2Result );
			});
			it( "Test 3", {
				final ip = test3;
				Main.process( ip.n, ip.constraints ).should.be( test3Result );
			});
			it( "Test 4", {
				final ip = test4;
				Main.process( ip.n, ip.constraints ).should.be( test4Result );
			});
			it( "Test 5", {
				final ip = test5;
				Main.process( ip.n, ip.constraints ).should.be( test5Result );
			});
			it( "Test 6", {
				final ip = test6;
				Main.process( ip.n, ip.constraints ).should.be( test6Result );
			});
			it( "Test 7", {
				final ip = test7;
				Main.process( ip.n, ip.constraints ).should.be( test7Result );
			});
		});
	}

	static function parseInput( input:String ) {
		initReadline( input );
		final n = parseInt( readline());
		final k = parseInt( readline());
		final constraints = [for( i in 0...k ) readline().split( "<" ).map( s -> parseInt( s ))];
					
		return { n: n, constraints: constraints };
	}

	static function parseResult( input:String ) {
		return input.replace( "\t", "" ).replace( "\r", "" );
	}

	final test1 = parseInput(
		"8
		3
		2<5
		3<4
		5<4"
	);

	final test1Result = "1 2 3 5 4 6 7 8";

	final test2 = parseInput(
		"16
		5
		6<4
		4<3
		3<6
		7<5
		6<5"
	);

	final test2Result = "INVALID";

	final test3 = parseInput(
		"20
		7
		5<9
		3<1
		12<8
		6<12
		20<14
		2<5
		15<2"
	);

	final test3Result = "3 1 4 6 7 10 11 12 8 13 15 2 5 9 16 17 18 19 20 14";

	final test4 = parseInput(
		"33
		0"
	);

	final test4Result = "1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33";

	final test5 = parseInput(
		"7
		2
		4<4
		2<3"
	);

	final test5Result = "INVALID";

	final test6 = parseInput(
		"150
		150
		16<106
		122<34
		9<1
		35<142
		45<52
		73<96
		116<102
		137<50
		60<74
		108<6
		119<11
		87<145
		51<124
		137<47
		150<89
		55<114
		63<95
		49<145
		44<52
		114<22
		85<9
		5<97
		49<67
		19<47
		30<10
		5<45
		134<76
		123<93
		119<128
		63<150
		26<45
		64<52
		34<97
		131<144
		36<44
		48<87
		70<65
		62<117
		19<47
		1<16
		141<108
		145<79
		103<3
		99<132
		28<134
		23<87
		47<107
		107<136
		16<94
		132<31
		55<32
		123<142
		4<150
		48<131
		96<121
		13<124
		58<34
		47<75
		131<24
		54<149
		98<122
		109<21
		105<120
		38<143
		60<133
		130<83
		115<44
		95<93
		10<75
		149<96
		9<82
		117<60
		12<96
		119<108
		73<97
		76<27
		73<30
		141<41
		23<89
		65<99
		19<47
		150<100
		43<131
		20<71
		109<7
		81<33
		12<17
		130<147
		127<131
		106<149
		39<82
		78<124
		6<68
		71<44
		135<81
		121<116
		105<60
		74<55
		105<103
		131<69
		53<55
		98<25
		58<7
		28<58
		47<45
		102<81
		36<114
		13<104
		41<30
		42<6
		40<27
		49<98
		129<101
		41<107
		77<92
		123<87
		51<70
		40<38
		48<47
		12<149
		142<10
		135<31
		53<13
		136<111
		66<67
		16<139
		148<96
		88<18
		70<139
		69<54
		117<40
		39<110
		43<56
		87<117
		44<141
		7<82
		19<73
		68<17
		29<84
		47<12
		62<144
		109<83
		47<63
		85<68
		71<142
		24<107
		88<21
		117<129
		16<46
		17<112"
	);

	final test6Result = "2 4 5 8 14 15 19 20 23 26 28 29 35 36 37 39 42 43 48 49 51 53 13 56 57 58 59 61 62 64 66 67 70 65 71 72 73 77 78 80 84 85 9 1 16 46 86 88 18 90 91 92 94 98 25 99 104 105 103 3 106 109 7 21 82 110 113 115 44 118 119 11 120 122 34 97 123 87 117 40 38 60 74 55 32 114 22 124 125 126 127 128 129 101 130 83 131 24 69 54 132 133 134 76 27 135 31 137 47 12 45 50 52 63 95 93 138 139 140 141 41 30 107 108 6 68 17 112 136 111 142 10 75 143 144 145 79 146 147 148 149 96 121 116 102 81 33 150 89 100";

	final test7 = parseInput(
		"250
		250
		108<248
		237<52
		47<140
		45<182
		31<182
		127<132
		13<74
		171<175
		155<74
		139<99
		92<33
		106<66
		24<45
		91<47
		125<69
		115<209
		54<76
		107<223
		125<99
		78<127
		242<153
		107<106
		96<48
		138<12
		22<76
		113<151
		21<69
		249<45
		43<155
		42<196
		70<17
		241<24
		152<225
		108<174
		113<173
		235<52
		199<162
		19<126
		125<232
		241<198
		26<149
		134<167
		45<5
		57<82
		23<97
		179<166
		98<195
		182<40
		72<75
		162<75
		40<194
		74<3
		212<161
		126<222
		162<153
		223<38
		195<209
		23<75
		66<32
		237<171
		113<221
		62<115
		37<53
		116<221
		51<241
		87<179
		219<74
		141<75
		169<27
		211<25
		77<234
		172<166
		128<122
		211<106
		196<3
		203<179
		131<175
		171<206
		229<184
		190<81
		117<106
		237<73
		28<135
		109<104
		160<107
		241<21
		145<150
		115<86
		152<192
		93<241
		202<136
		33<190
		88<153
		235<156
		215<144
		20<82
		105<8
		200<178
		70<76
		203<25
		75<171
		145<164
		86<100
		26<44
		250<247
		125<144
		172<41
		51<180
		79<181
		24<188
		226<217
		224<206
		235<165
		27<159
		96<115
		201<100
		70<119
		73<54
		191<133
		66<7
		180<209
		249<217
		178<69
		117<23
		239<28
		36<18
		45<96
		91<218
		97<1
		62<98
		211<191
		234<28
		158<17
		196<216
		70<95
		41<153
		215<220
		217<142
		71<57
		194<167
		44<110
		220<107
		216<68
		133<222
		32<39
		242<107
		144<163
		89<186
		61<188
		226<99
		107<136
		5<92
		194<53
		244<36
		233<132
		145<161
		200<227
		199<44
		179<103
		209<75
		143<228
		4<143
		224<27
		126<180
		58<157
		240<133
		119<43
		161<153
		2<188
		7<243
		42<118
		16<12
		164<186
		167<34
		81<99
		35<113
		23<248
		73<130
		67<8
		129<32
		68<20
		60<168
		207<178
		139<89
		189<131
		105<55
		173<91
		98<219
		201<209
		156<82
		66<54
		138<107
		169<142
		249<61
		156<116
		243<105
		97<173
		57<198
		156<170
		32<55
		97<132
		94<231
		121<213
		160<131
		122<12
		33<19
		204<49
		131<52
		234<136
		102<210
		203<30
		151<162
		162<23
		6<205
		38<217
		63<250
		132<148
		243<188
		61<205
		212<237
		54<171
		122<215
		154<161
		176<186
		218<39
		185<84
		165<202
		81<177
		72<40
		124<41
		102<134
		2<84
		43<203
		110<240
		172<107
		175<20
		137<150
		58<139
		207<173
		13<97
		244<80
		140<233
		38<44
		53<13
		190<43
		150<181
		118<24
		216<13
		90<243
		82<8"
	);

	final test7Result = "2 4 6 9 10 11 14 15 16 22 26 29 31 35 37 42 46 50 51 56 58 59 60 62 63 64 65 67 70 71 57 72 77 78 79 83 85 87 88 90 93 94 95 98 101 102 108 109 104 111 112 113 114 117 118 119 120 121 123 124 125 127 128 122 129 134 137 138 12 139 89 141 143 145 146 147 149 150 151 152 154 157 158 17 160 164 168 169 172 41 174 176 181 183 185 84 186 187 189 131 192 193 195 196 197 199 162 23 200 201 204 49 207 178 208 210 211 191 212 161 213 214 215 144 163 216 68 219 220 224 27 159 225 226 227 228 229 184 230 231 232 234 235 156 116 165 170 202 221 236 237 52 73 130 238 239 28 135 241 21 24 69 198 242 107 106 66 7 32 54 76 136 153 223 38 44 110 240 133 243 105 55 244 36 18 80 245 246 248 249 45 5 61 92 33 19 96 48 115 86 100 126 180 182 40 188 190 43 81 99 155 177 194 53 13 74 3 97 1 167 34 173 91 47 140 203 25 30 179 103 166 205 209 75 171 175 20 82 8 206 217 142 218 39 222 233 132 148 250 247";
}
