package test;

import haxe.Int64;
import Main;
import Std.parseInt;

using buddy.Should;
using StringTools;
using Lambda;

@:access(Main)
class Tests extends buddy.BuddySuite {
	
	public function new() {
		
		describe( "Test process", {
			
			it( "The random is in the spring", { Main.process( theRandomIsInTheSpring ).should.be( "14.9\n14.9" ); });
			it( "Winter is coming", { Main.process( winterIsComing ).should.be( "4.9" ); });
			it( "Jiminy beats the measure", { Main.process( jiminyBeatsTheMeasure ).should.be( "10.7\n11.0" ); });
			it( "Jiminy nearly died of cold...", { Main.process( jiminyNearlyDiedOfCold ).should.be( "4.4" ); });
			it( "An hour in summer", { Main.process( anHourInSummer ).should.be( "29.8\n28.8" ); });
			it( "30 minutes of heat wave", { Main.process( _30MinutsOfHeatWave ).should.be( "42.0" ); });
			
		});
	}

	static function parseInput( input:String ) {
		final lines = input.replace( "\t", "" ).replace( "\r", "" ).split( "\n" );
		
		return [for( i in 1...lines.length ) lines[i].split(" ").map( s -> parseInt( s ))];
	}
	
	static function parseResult( input:String ) {
		return input.replace( "\t", "" ).replace( "\r", "" );
	}
	
	final theRandomIsInTheSpring = parseInput(
		"2
		8 8 6 3 2 4 8 6 9 5 2 1 5 2 8
		8 3 3 6 7 2 8 1 7 4 5 4 2 3 9"
	);

	final winterIsComing = parseInput(
		"2
		0 1 1 0 0 1 0 1 1 0 0 1 0 0 1
		0 0 1 0 0 0 1 0 0 0 0 0 0 0 0"
	);

	final jiminyBeatsTheMeasure = parseInput(
		"3
		3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
		3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
		3 3 3 3 3 3 3 3 3 3 3 3 3 3 3"
	);

	final jiminyNearlyDiedOfCold = parseInput(
		"1
		1 0 0 0 0 0 0 0 0 0 0 0 0 0 0"
	);

	final anHourInSummer = parseInput(
		"60
		13 14 12 10 12 11 11 10 10 13 14 14 14 10 14
		11 12 11 14 13 10 10 12 12 13 11 13 11 12 13
		12 14 10 11 11 10 11 10 10 11 10 14 11 14 13
		14 10 13 10 11 13 10 11 11 12 13 10 10 10 10
		11 10 14 11 10 13 12 14 14 13 13 11 13 14 13
		14 10 10 13 12 12 11 10 10 11 14 14 11 11 14
		12 10 12 13 14 12 11 13 13 14 13 12 12 10 12
		12 10 10 10 13 12 10 11 12 11 11 14 10 13 11
		12 12 10 11 11 14 12 13 11 11 13 12 11 14 11
		14 13 13 13 13 10 14 13 13 13 14 10 13 10 10
		10 12 11 13 14 11 11 12 10 12 12 14 12 10 14
		14 10 11 13 10 14 11 13 14 10 13 11 12 10 13
		11 14 14 14 12 11 12 13 13 13 12 13 14 12 14
		11 13 14 12 12 11 13 12 14 12 10 13 13 10 13
		14 14 14 12 14 10 12 10 13 11 10 14 12 11 13
		13 12 14 11 13 13 14 14 14 13 11 12 11 13 11
		12 12 11 11 12 10 13 10 11 12 14 12 10 12 12
		11 13 14 11 13 11 12 11 13 11 13 10 14 14 12
		13 10 14 10 13 11 10 13 11 13 12 11 12 10 14
		10 13 10 12 10 10 12 13 10 11 11 14 14 13 11
		12 10 11 13 13 12 14 11 13 10 11 12 10 11 13
		12 14 14 12 10 13 13 10 14 14 14 10 12 14 14
		11 13 12 10 10 14 11 13 11 14 13 12 11 12 10
		14 11 12 10 11 11 10 11 11 11 10 10 11 10 13
		14 13 12 12 14 12 13 12 12 12 10 14 14 11 13
		10 10 12 12 11 12 11 10 12 13 11 13 12 12 10
		12 12 13 11 11 11 12 10 11 11 12 11 14 11 10
		10 13 14 12 10 13 10 14 14 13 14 13 10 14 12
		12 10 10 10 12 14 12 11 10 13 11 14 12 12 11
		10 10 14 12 11 14 12 12 12 10 11 10 11 13 11
		13 11 11 12 10 12 13 12 10 14 11 12 11 11 14
		13 10 10 12 14 14 13 13 12 12 13 13 11 13 11
		11 13 12 13 14 12 10 13 10 13 14 13 13 12 10
		10 13 14 11 10 14 13 10 10 14 10 14 13 12 14
		11 11 10 13 12 12 11 13 10 13 10 13 11 12 11
		14 13 11 10 11 13 10 10 10 10 10 11 10 13 13
		13 11 11 13 10 13 10 13 10 14 14 12 13 12 10
		14 12 10 11 13 10 10 13 11 13 12 12 13 13 13
		12 10 14 12 13 14 14 11 12 12 14 11 11 12 10
		14 12 11 12 10 13 12 14 11 12 14 14 11 14 10
		14 11 10 12 13 11 11 10 13 10 10 10 13 11 12
		13 14 11 13 13 14 13 11 14 10 10 14 12 11 13
		13 10 11 12 14 13 13 10 12 14 13 11 11 14 12
		12 11 14 13 14 13 10 12 10 10 12 12 10 13 13
		11 11 14 14 14 14 14 11 10 14 14 10 13 12 13
		11 13 11 11 11 11 13 11 11 12 10 10 13 10 11
		12 14 10 10 13 10 13 10 14 13 10 12 11 11 10
		11 11 13 11 14 10 11 11 10 13 12 13 11 13 10
		11 10 13 13 14 12 11 11 12 14 14 12 11 12 13
		10 10 13 11 12 11 13 11 12 12 13 10 14 13 11
		12 13 14 14 13 13 13 12 10 12 14 14 11 11 11
		14 10 10 13 11 11 11 12 10 12 14 10 13 13 10
		10 12 11 12 14 13 12 10 11 12 13 13 11 10 11
		12 14 13 10 10 12 13 10 13 11 10 13 13 11 10
		11 11 13 13 12 14 13 11 10 14 13 11 11 10 10
		13 13 14 12 11 13 10 12 14 14 13 11 10 12 10
		13 10 11 13 10 14 12 10 14 13 11 13 10 10 10
		13 10 11 11 12 14 13 14 12 11 13 13 11 12 11
		14 12 12 10 11 13 12 10 11 11 13 10 12 10 13
		13 10 10 10 10 11 12 10 13 13 11 10 12 11 11"
	);

	final _30MinutsOfHeatWave = parseInput(
		"30
		15 17 19 20 16 16 17 19 15 20 18 20 15 18 18
		19 19 18 17 18 16 15 16 15 18 17 18 20 18 19
		17 17 19 16 19 20 19 19 16 15 19 15 17 19 20
		16 20 17 15 15 15 18 18 18 16 16 15 18 18 17
		19 15 18 18 20 15 19 19 19 19 18 17 15 17 18
		19 20 17 18 19 17 17 19 18 19 20 15 17 19 17
		15 17 20 20 15 19 18 15 15 17 19 16 19 20 15
		17 17 16 15 19 16 19 16 19 17 15 15 17 20 17
		19 20 16 17 19 17 16 18 19 19 15 15 18 15 20
		17 19 17 15 20 20 15 16 15 18 19 16 15 20 16
		15 16 15 18 20 18 16 18 20 20 20 15 17 19 15
		18 15 20 17 19 17 15 19 15 17 18 17 16 17 18
		18 17 20 16 20 15 20 20 17 15 17 15 18 19 20
		19 16 16 17 16 20 20 15 15 19 19 19 18 18 20
		16 20 18 16 15 16 19 19 18 20 19 15 20 16 19
		19 18 17 20 17 18 19 16 18 16 19 16 16 17 19
		19 15 16 19 17 17 20 15 15 15 16 17 16 15 16
		19 16 18 18 17 19 19 18 18 18 17 19 17 15 18
		15 18 17 15 15 19 17 17 16 20 18 20 20 18 20
		16 16 17 18 17 18 17 19 17 20 20 20 18 19 17
		16 19 16 20 15 15 17 19 20 17 19 16 19 20 17
		16 16 18 16 16 19 19 17 16 20 19 19 17 16 19
		18 20 17 18 20 15 15 20 20 20 19 20 19 18 18
		16 16 19 18 19 20 19 15 16 18 20 17 20 19 19
		15 16 16 20 18 18 15 20 20 18 19 19 17 16 17
		19 15 18 16 16 16 20 19 15 17 18 16 16 20 19
		15 19 18 16 19 16 20 15 15 18 19 19 19 20 15
		17 20 17 18 19 19 19 19 20 20 19 15 17 19 19
		15 17 20 15 15 19 19 20 19 17 17 19 17 16 18
		18 19 15 18 19 18 16 17 20 18 19 16 15 17 19"
	);

}

