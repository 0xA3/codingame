package test;

import Std.parseInt;

using buddy.Should;
using StringTools;

@:access(Main)
class TestProcess extends buddy.BuddySuite{

	public function new() {

		describe( "Test process", {
			it( "Basic", {
				final ip = simpleStart;
				Main.process( ip.rows ).should.be( "1 3" );
			});
			it( "Example", {
				final ip = example;
				Main.process( ip.rows ).should.be( "2 6" );
			});
			it( "Multiple islands", {
				final ip = multipleIslands;
				Main.process( ip.rows ).should.be( "3 12" );
			});
			it( "Checkerboard", {
				final ip = checkerboard;
				Main.process( ip.rows ).should.be( "4 4" );
			});
			it( "Weird shaped island", {
				final ip = weirdShapedIsland;
				Main.process( ip.rows ).should.be( "1 30" );
			});
			it( "Linked islands", {
				final ip = linkedIslands;
				Main.process( ip.rows ).should.be( "3 10" );
			});
			it( "No water", {
				final ip = noWater;
				Main.process( ip.rows ).should.be( "1 0" );
			});
			it( "Large Archipelago", {
				final ip = langeArchipelago;
				Main.process( ip.rows ).should.be( "51 88" );
			});
		});
	}

	static function parseInput( input:String ) {
		final lines = input.replace( "\t", "" ).replace( "\r", "" ).split( "\n" );
		final n = parseInt( lines[0] );
		final rows = [for( i in 0...n ) lines[i + 1]];
			
		return { rows: rows }
	}

	final simpleStart = parseInput(
	"3
	~~#
	~~#
	~~#" );

	final example = parseInput(
	"5
	~~~~#
	~~~##
	~~~~~
	~##~~
	~~~~~"
	);

	final multipleIslands = parseInput(
	"6
	##~~#~
	##~~~~
	~~~~#~
	~~~##~
	~####~
	~~~~~~" );

	final checkerboard = parseInput(
	"5
	#~#~#
	~#~#~
	#~#~#
	~#~#~
	#~#~#" );

	final weirdShapedIsland = parseInput(
	"8
	~######~
	~#~~###~
	~####~#~
	~#~~###~
	~####~#~
	~#~~~~#~
	~######~
	~~~~~~~~" );

	final linkedIslands = parseInput(
	"10
	~~~~~~#~~~
	~~~#~###~~
	~~###~#~~~
	~~~#~#~~~~
	~~~~###~~~
	~~#~#~#~#~
	~###~#~###
	~~#~###~#~
	~~~#~#~#~~
	~~###~###~" );

	final noWater = parseInput(
	"8
	########
	########
	########
	########
	########
	########
	########
	########" );

	final langeArchipelago = parseInput(
	"50
	##~##~#~####~~~#~#~~~##~~##~~~#~~##~####~#~~~~~~~~
	##~~~##~#~###~#~###~~##~#~####~#~#~##~#~~#~~#~###~
	~##~#~~~##~~~~#~#~#~#~~##~######~###~##~~##~###~~#
	#~~###~~~#~#####~~~#~#~~###~##~~~#~~~~~#~~#~##~###
	~~##~#~##~#~~##~#~###~##~#~#~#~###~#~~~~###~####~#
	####~##~~~##~~#~###~##~##~#~###~#~#~~~##~##~##~~##
	~#~#~~~#~~#~~##~#~######~#~#~~###~#~~~~###~~~#~#~#
	~#~##~~~~~#~~###~##~~~~##~#~##~#~~####~###~~~~~##~
	##~###~~#~##~##~~~##~~#####~##~~#~#~~####~~~#~##~#
	~~~##~####~~##~#~~###~~~~~~#~#~~~##~#~#~###~##~~~#
	###~~#~~~~###~~#~####~##~#~~###~##~~~~###~#~#~#~#~
	~#~#~##~#~####~#######~###~~~~##~####~~~~~##~~#~#~
	~~##~~~##~~~~#~~#~###~~#~~###~~#~###~~#######~~~~~
	#~~##~~#~~#~#~~#~~~#~~###~~~####~~##~#~#~#~~###~##
	######~###~#~~##~~~#####~~##~##~~~~~#~#~~~~#~~~#~#
	#~#~#~~#~~##~#~#~~~~~##~#~###~~#~~~~##~####~~#~~#~
	~~#~##~#~~#~##~#~~~~~#~~##~~~~#~~~#~###~###~######
	###~####~##~~##~~#~###~~##~#~#~~~#~~~~#~~~#~~~~~#~
	~~#~~#~##~~####~~~~~~~######~#####~~~~~~#####~~#~#
	##~##~~~##~~~######~#~###~~~~#~~#~~#~####~###~#~##
	~###~#~~#~#~~~~~~##~#~###~~~#~#~#####~~~~#~#~~#~~~
	####~~~~##~##~~~##~~~~#~##~#~##~~~~~##~~###~##~##~
	#~~~~###~##~~#~~#~#~~##~##~#~##~~~###~~~~~~###~##~
	~~~#~#~~~####~~####~#~###~~#~~~~##~~~~########~~#~
	####~~~~~~~~##~#~#######~#~####~#~##~###~~~~###~##
	#~#~##~##~~##~~#~##~##~#~~~#~~~###~~~~~#~~#~~~###~
	###~#~#~#~~#~#######~~#~~~~#~##~##~#~~~#~~###~##~~
	~###~#~#~~#~########~##~~####~##~~~~~~###~#~~#~~##
	~#~~###~####~####~~~~#~~#~#~~##~~~##~~##~#~~##~#~#
	~~#~~~##~~##~###~~~~#~##~##~~~~###~###~~~~#~~#~~#~
	~#~##~##~#~#~#~###~##~#####~~###~##~~#~######~~##~
	~#~~#~~~~~~~#~#~~#~~~~~#~~~###~###~~#~~~##~~~#~~~#
	#~#~#####~~##~#~##~~~##~##~~##~######~##~#~~#~##~#
	~~#~#~~##~#~~##~~#~#####~~~######~~~~#~##~#~####~~
	~~~~~####~##~~#~#~####~#~~##~~~~~~#~~~#######~~#~~
	###~~~##~~~##~##~##~~#~#~~###~~#~~#~#~#~~###~#~~##
	###~~#~~#~##~~~#~~#~####~~#####~~~#~~~#~~##~~~###~
	##~#~~##~#~~~~#~#~~##~####~##~~~#~##~#~#~#####~###
	#~~~##~~~##~~#~##~~~#~~#~#~~#~~~~#~~####~~~~~#~##~
	##~~#~#~#~##~##~##~#~~~~#~#~#~~~###~~~##~###~#~##~
	~~########~#~#~###~##~~~~~~###~~~~#~##~##~##~##~~~
	~~#~#~#~##~#~~#~~##~#~~##~##~~#~~###########~~~#~#
	~~#~##~~~#~#~~~###~#####~~#~#~#~~~~~~##~~~##~#~#~~
	~###~~####~~#~#~#~~##~###~~##~#~##~##~~~######~#~#
	~#~##~###~~#~##~~~~#~##~##~~~##~#~~##~~~~#######~~
	~~#~##~~~#~~#~#~#~#####~~###~~####~##~~~#~~#~#~#~#
	~#~~~###~###~~~~~~#~####~##~~#~~~~###~~~#~#~#~##~#
	~~#~#~~~~~##~#~~~~~##~###~~~~####~~~~~~######~~~~#
	#~~~~#~~#~##~#~#~~~##~##~~~#~##~###~##~~#~#~###~##
	####~~###~###~#~##~##~####~##~##~~~###~~##~~~#~#~#" );
}
