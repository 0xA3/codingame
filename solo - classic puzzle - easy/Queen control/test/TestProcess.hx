package test;

import Std.parseInt;

using StringTools;
using buddy.Should;

@:access(Main)
class TestProcess extends buddy.BuddySuite{

	public function new() {

		describe( "Test process", {
			it( "Corner", {
				final ip = corner;
				Main.process( ip.color, ip.board ).should.be( 21 );
			});
			it( "Center", {
				final ip = center;
				Main.process( ip.color, ip.board ).should.be( 27 );
			});
			it( "White ally down right", {
				final ip = whiteAllyDownRight;
				Main.process( ip.color, ip.board ).should.be( 19 );
			});
			it( "White ally up left", {
				final ip = whiteAllyUpLeft;
				Main.process( ip.color, ip.board ).should.be( 20 );
			});
			it( "White ally diagonal", {
				final ip = whiteAllyDiagonal;
				Main.process( ip.color, ip.board ).should.be( 17 );
			});
			it( "Black ally down right", {
				final ip = blackAllyDownRight;
				Main.process( ip.color, ip.board ).should.be( 17 );
			});
			it( "Black ally up left", {
				final ip = blackAllyUpLeft;
				Main.process( ip.color, ip.board ).should.be( 21 );
			});
			it( "Black ally diagonal", {
				final ip = blackAllyDiagonal;
				Main.process( ip.color, ip.board ).should.be( 18 );
			});
			it( "Black enemy", {
				final ip = blackEnemy;
				Main.process( ip.color, ip.board ).should.be( 16 );
			});
			it( "White enemy", {
				final ip = whiteEnemy;
				Main.process( ip.color, ip.board ).should.be( 21 );
			});
			it( "Surrounded by allies", {
				final ip = surroundedByAllies;
				Main.process( ip.color, ip.board ).should.be( 0 );
			});
			it( "Surrounded by enemies", {
				final ip = surroundedByEnemies;
				Main.process( ip.color, ip.board ).should.be( 8 );
			});
			it( "Advanced test 1", {
				final ip = advancedTest_1;
				Main.process( ip.color, ip.board ).should.be( 12 );
			});
			it( "Advanced test 2", {
				final ip = advancedTest_2;
				Main.process( ip.color, ip.board ).should.be( 14 );
			});
			it( "Advanced test 3", {
				final ip = advancedTest_3;
				Main.process( ip.color, ip.board ).should.be( 13 );
			});
		});
	}

	static function parseInput( input:String ) {
		final lines = input.replace( "\t", "" ).replace( "\r", "" ).split( "\n" );

		final color = lines[0].charAt( 0 );
		final board = [for( i in 0...8 ) lines[i + 1].split( "" )];
	
		return { color: color, board: board }
	}

	final corner = parseInput(
		"white
		Q.......
		........
		........
		........
		........
		........
		........
		........"
	);
	final center = parseInput(
		"black
		........
		........
		........
		...Q....
		........
		........
		........
		........"
	);

	final whiteAllyDownRight = parseInput(
		"white
		........
		........
		........
		.Q.....w
		........
		.ww.....
		........
		........"
	);

	final whiteAllyUpLeft = parseInput(
		"white
		........
		........
		........
		...w....
		........
		w..Q....
		........
		........"
	);

	final whiteAllyDiagonal = parseInput(
		"white
		........
		........
		w.......
		.....w..
		........
		...Q....
		..w.w...
		........"
	);

	final blackAllyDownRight = parseInput(
		"black
		........
		........
		........
		.Q..b...
		........
		........
		.b......
		........"
	);

	final blackAllyUpLeft = parseInput(
		"black
		...b....
		........
		........
		........
		........
		..bQ....
		........
		........"
	);

	final blackAllyDiagonal = parseInput(
		"black
		........
		........
		b.......
		.....b..
		........
		...Q....
		..b.....
		.....b.."
	);

	final blackEnemy = parseInput(
		"white
		........
		........
		........
		...b....
		........
		bQ.b....
		........
		.b......."
	);

	final whiteEnemy = parseInput(
		"black
		........
		........
		........
		...w....
		...wQ..w
		........
		........
		....w..."
	);

	final surroundedByAllies = parseInput(
		"white
		........
		........
		........
		........
		..www...
		..wQw...
		..www...
		........"
	);

	final surroundedByEnemies = parseInput(
		"black
		........
		........
		........
		........
		..www...
		..wQw...
		..www...
		........"
	);

	final advancedTest_1 = parseInput(
		"white
		........
		........
		........
		.b......
		b..b....
		wQ.b....
		..w.....
		.w......"
	);

	final advancedTest_2 = parseInput(
		"black
		wwwwwwww
		wwww..ww
		.....w..
		....w...
		.Q..b...
		........
		bbbb.bbb
		bbbbb.bb"
	);

	final advancedTest_3 = parseInput(
		"black
		........
		........
		...w....
		w....b.w
		...b....
		b..Q.w.w
		...w....
		........"
	);
}
