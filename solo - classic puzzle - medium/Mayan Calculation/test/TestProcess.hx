package test;

import Std.parseInt;

using StringTools;
using buddy.Should;

@:access(Main)
class TestProcess extends buddy.BuddySuite{

	public function new() {

		describe( "Test process", {
			it( "Simple addition", {
				final ip = simpleAddition;
				Main.process( ip.width, ip.height, ip.numeralsLines, ip.num1Lines, ip.num2Lines, ip.operation ).should.be( simpleAdditionResult );
			});
			it( "Addition with carry", {
				final ip = additionWithCarry;
				Main.process( ip.width, ip.height, ip.numeralsLines, ip.num1Lines, ip.num2Lines, ip.operation ).should.be( additionWithCarryResult );
			});
			it( "Multiplication", {
				final ip = multiplication;
				Main.process( ip.width, ip.height, ip.numeralsLines, ip.num1Lines, ip.num2Lines, ip.operation ).should.be( multiplicationResult );
			});
			it( "Simple subtraction", {
				final ip = simpleSubtraction;
				Main.process( ip.width, ip.height, ip.numeralsLines, ip.num1Lines, ip.num2Lines, ip.operation ).should.be( simpleSubtractionResult );
			});
			it( "Subtraction", {
				final ip = subtraction;
				Main.process( ip.width, ip.height, ip.numeralsLines, ip.num1Lines, ip.num2Lines, ip.operation ).should.be( subtractionResult );
			});
			it( "Simple division", {
				final ip = simpleDivision;
				Main.process( ip.width, ip.height, ip.numeralsLines, ip.num1Lines, ip.num2Lines, ip.operation ).should.be( simpleDivisionResult );
			});
			it( "Division", {
				final ip = division;
				Main.process( ip.width, ip.height, ip.numeralsLines, ip.num1Lines, ip.num2Lines, ip.operation ).should.be( divisionResult );
			});
			it( "Great multiplication", {
				final ip = greatMultiplication;
				Main.process( ip.width, ip.height, ip.numeralsLines, ip.num1Lines, ip.num2Lines, ip.operation ).should.be( greatMultiplicationResult );
			});
			it( "Zero", {
				final ip = zero;
				Main.process( ip.width, ip.height, ip.numeralsLines, ip.num1Lines, ip.num2Lines, ip.operation ).should.be( zeroResult );
			});
			it( "Missing power", {
				final ip = missingPower;
				Main.process( ip.width, ip.height, ip.numeralsLines, ip.num1Lines, ip.num2Lines, ip.operation ).should.be( missingPowerResult );
			});
			it( "Base 20", {
				final ip = base20;
				Main.process( ip.width, ip.height, ip.numeralsLines, ip.num1Lines, ip.num2Lines, ip.operation ).should.be( base20Result );
			});
			it( "Other symbols", {
				final ip = otherSymbols;
				Main.process( ip.width, ip.height, ip.numeralsLines, ip.num1Lines, ip.num2Lines, ip.operation ).should.be( otherSymbolsResult );
			});
		});
	}

	static function parseInput( input:String ) {
		final lines = input.replace( "\t", "" ).replace( "\r", "" ).split( "\n" );

		final inputs = lines[0].split(' ');
		final l = parseInt(inputs[0]);
		final h = parseInt(inputs[1]);
		
		var offset = 1;
		final numeralsLines = [for( i in 0...h ) lines[offset + i]];
		
		offset += h;
		final s1 = parseInt(lines[offset]);
		
		offset += 1;
		final num1Lines = [for( i in 0...s1 ) lines[offset + i]];
		
		offset += s1;
		final s2 = parseInt(lines[offset]);
		
		offset += 1;
		final num2Lines = [for( i in 0...s2 ) lines[offset + i]];

		offset += s2;
		final operation = lines[offset];
	
		return { width: l, height: h, numeralsLines: numeralsLines, num1Lines: num1Lines, num2Lines: num2Lines, operation: operation }
	}
	
	static function parseResult( input:String ) {
		return input.replace( "\t", "" ).replace( "\r", "" );
	}
	
	final simpleAddition = parseInput(
		"4 4
		.oo.o...oo..ooo.oooo....o...oo..ooo.oooo....o...oo..ooo.oooo....o...oo..ooo.oooo
		o..o................____________________________________________________________
		.oo.....................................________________________________________
		............................................................____________________
		4
		o...
		....
		....
		....
		4
		o...
		....
		....
		....
		+"
	);

	final simpleAdditionResult = parseResult(
		"oo..
		....
		....
		...."
	);

	final additionWithCarry = parseInput(
		"4 4
		.oo.o...oo..ooo.oooo....o...oo..ooo.oooo....o...oo..ooo.oooo....o...oo..ooo.oooo
		o..o................____________________________________________________________
		.oo.....................................________________________________________
		............................................................____________________
		4
		ooo.
		____
		____
		____
		4
		ooo.
		....
		....
		....
		+"
	);

	final additionWithCarryResult = parseResult(
		"o...
		....
		....
		....
		o...
		....
		....
		...."
	);

	final multiplication = parseInput(
		"4 4
		.oo.o...oo..ooo.oooo....o...oo..ooo.oooo....o...oo..ooo.oooo....o...oo..ooo.oooo
		o..o................____________________________________________________________
		.oo.....................................________________________________________
		............................................................____________________
		4
		....
		____
		....
		....
		4
		....
		____
		....
		....
		*"
	);

	final multiplicationResult = parseResult(
		"o...
		....
		....
		....
		....
		____
		....
		...."
	);
	
	final simpleSubtraction = parseInput(
		"4 4
		.oo.o...oo..ooo.oooo....o...oo..ooo.oooo....o...oo..ooo.oooo....o...oo..ooo.oooo
		o..o................____________________________________________________________
		.oo.....................................________________________________________
		............................................................____________________
		4
		oo..
		____
		....
		....
		4
		oo..
		....
		....
		....
		-"
	);

	final simpleSubtractionResult = parseResult(
		"....
		____
		....
		...."
	);

	final subtraction = parseInput(
		"4 4
		.oo.o...oo..ooo.oooo....o...oo..ooo.oooo....o...oo..ooo.oooo....o...oo..ooo.oooo
		o..o................____________________________________________________________
		.oo.....................................________________________________________
		............................................................____________________
		8
		o...
		____
		....
		....
		ooo.
		....
		....
		....
		4
		oo..
		____
		....
		....
		-"
	);

	final subtractionResult = parseResult(
		"....
		____
		....
		....
		o...
		____
		____
		____"
	);

	final simpleDivision = parseInput(
		"4 4
		.oo.o...oo..ooo.oooo....o...oo..ooo.oooo....o...oo..ooo.oooo....o...oo..ooo.oooo
		o..o................____________________________________________________________
		.oo.....................................________________________________________
		............................................................____________________
		4
		ooo.
		____
		....
		....
		4
		oooo
		....
		....
		....
		/"
	);

	final simpleDivisionResult = parseResult(
		"oo..
		....
		....
		...."
	);

	final division = parseInput(
		"4 4
		.oo.o...oo..ooo.oooo....o...oo..ooo.oooo....o...oo..ooo.oooo....o...oo..ooo.oooo
		o..o................____________________________________________________________
		.oo.....................................________________________________________
		............................................................____________________
		12
		oooo
		....
		....
		....
		ooo.
		____
		....
		....
		.oo.
		o..o
		.oo.
		....
		4
		....
		____
		____
		....
		/"
	);

	final divisionResult = parseResult(
		"ooo.
		____
		....
		....
		o...
		____
		____
		____"
	);

	final greatMultiplication = parseInput(
		"4 4
		.oo.o...oo..ooo.oooo....o...oo..ooo.oooo....o...oo..ooo.oooo....o...oo..ooo.oooo
		o..o................____________________________________________________________
		.oo.....................................________________________________________
		............................................................____________________
		16
		o...
		....
		....
		....
		....
		____
		____
		....
		oo..
		____
		____
		____
		....
		____
		....
		....
		20
		oooo
		....
		....
		....
		ooo.
		____
		____
		____
		oo..
		____
		____
		....
		....
		____
		____
		....
		oo..
		____
		____
		....
		*"
	);

	final greatMultiplicationResult = parseResult(
		"oo..
		____
		....
		....
		oo..
		____
		____
		....
		ooo.
		....
		....
		....
		oo..
		____
		____
		____
		oooo
		....
		....
		....
		oo..
		....
		....
		....
		oo..
		____
		____
		____
		.oo.
		o..o
		.oo.
		...."
	);

	final zero = parseInput(
		"4 4
		.oo.o...oo..ooo.oooo....o...oo..ooo.oooo....o...oo..ooo.oooo....o...oo..ooo.oooo
		o..o................____________________________________________________________
		.oo.....................................________________________________________
		............................................................____________________
		16
		....
		____
		____
		____
		ooo.
		____
		....
		....
		oo..
		____
		____
		....
		o...
		____
		____
		____
		4
		.oo.
		o..o
		.oo.
		....
		*"
	);

	final zeroResult = parseResult(
		".oo.
		o..o
		.oo.
		...."
	);

	final missingPower = parseInput(
		"4 4
		.oo.o...oo..ooo.oooo....o...oo..ooo.oooo....o...oo..ooo.oooo....o...oo..ooo.oooo
		o..o................____________________________________________________________
		.oo.....................................________________________________________
		............................................................____________________
		16
		o...
		....
		....
		....
		.oo.
		o..o
		.oo.
		....
		.oo.
		o..o
		.oo.
		....
		o...
		....
		....
		....
		8
		oo..
		....
		....
		....
		oo..
		....
		....
		....
		*"
	);

	final missingPowerResult = parseResult(
		"oo..
		....
		....
		....
		oo..
		....
		....
		....
		.oo.
		o..o
		.oo.
		....
		oo..
		....
		....
		....
		oo..
		....
		....
		...."
	);

	final base20 = parseInput(
		"1 1
		0123456789ABCDEFGHIJ
		4
		1
		0
		0
		G
		2
		2
		2
		*"
	);

	final base20Result = parseResult(
		"2
		2
		1
		D
		C"
	);

	final otherSymbols = parseInput(
		"11 11
		....................................................................................................................................................................................XX........XX.XX....XX.XX.XX..XX.XX.XX.XX
		.............................................................................................................................XX........XX.XX....XX.XX.XX..XX.XX.XX.XXXXXXXXXXXXX....XX........XX.XX....XX.XX.XX..XX.XX.XX.XX
		....XXXX.....................................................................................................................XX........XX.XX....XX.XX.XX..XX.XX.XX.XXXXXXXXXXXXX............................................
		...X....X.............................................................XX........XX.XX....XX.XX.XX..XX.XX.XX.XXXXXXXXXXXXX.......................................................XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
		..X......X.....XX........XX.XX.....XX.XX.XX.XX.XX.XX.XXXXXXXXXXXXX....XX........XX.XX....XX.XX.XX..XX.XX.XX.XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
		.X.X....X.X....XX........XX.XX.....XX.XX.XX.XX.XX.XX.XXXXXXXXXXXXX.......................................................XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX............................................
		.XXXXXXXXXX.......................................................XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.......................................................XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
		.X.X....X.X.......................................................XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.......................................................XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
		..X......X...............................................................................................................XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX............................................
		...X....X................................................................................................................XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
		....XXXX........................................................................................................................................................................XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
		33
		...........
		...........
		...........
		...........
		XXXXXXXXXXX
		XXXXXXXXXXX
		...........
		...........
		...........
		...........
		...........
		...........
		...........
		....XXXX...
		...X....X..
		..X......X.
		.X.X....X.X
		.XXXXXXXXXX
		.X.X....X.X
		..X......X.
		...X....X..
		....XXXX...
		...........
		...XX.XX...
		...XX.XX...
		...........
		XXXXXXXXXXX
		XXXXXXXXXXX
		...........
		...........
		XXXXXXXXXXX
		XXXXXXXXXXX
		...........
		44
		...........
		...........
		...........
		...........
		...XX.XX...
		...XX.XX...
		...........
		...........
		...........
		...........
		...........
		...........
		...XX.XX...
		...XX.XX...
		...........
		XXXXXXXXXXX
		XXXXXXXXXXX
		...........
		...........
		XXXXXXXXXXX
		XXXXXXXXXXX
		...........
		....XX.....
		....XX.....
		...........
		XXXXXXXXXXX
		XXXXXXXXXXX
		...........
		XXXXXXXXXXX
		XXXXXXXXXXX
		...........
		XXXXXXXXXXX
		XXXXXXXXXXX
		...........
		...........
		....XXXX...
		...X....X..
		..X......X.
		.X.X....X.X
		.XXXXXXXXXX
		.X.X....X.X
		..X......X.
		...X....X..
		....XXXX...
		*"
	);

	final otherSymbolsResult = parseResult(
		"...........
		.XX.XX.XX..
		.XX.XX.XX..
		...........
		XXXXXXXXXXX
		XXXXXXXXXXX
		...........
		...........
		XXXXXXXXXXX
		XXXXXXXXXXX
		...........
		...........
		...........
		...........
		...........
		XXXXXXXXXXX
		XXXXXXXXXXX
		...........
		...........
		...........
		...........
		...........
		...........
		....XX.....
		....XX.....
		...........
		XXXXXXXXXXX
		XXXXXXXXXXX
		...........
		...........
		XXXXXXXXXXX
		XXXXXXXXXXX
		...........
		...........
		.XX.XX.XX..
		.XX.XX.XX..
		...........
		XXXXXXXXXXX
		XXXXXXXXXXX
		...........
		...........
		XXXXXXXXXXX
		XXXXXXXXXXX
		...........
		...........
		...XX.XX...
		...XX.XX...
		...........
		XXXXXXXXXXX
		XXXXXXXXXXX
		...........
		...........
		XXXXXXXXXXX
		XXXXXXXXXXX
		...........
		...........
		...........
		....XXXX...
		...X....X..
		..X......X.
		.X.X....X.X
		.XXXXXXXXXX
		.X.X....X.X
		..X......X.
		...X....X..
		....XXXX..."
	);
}
