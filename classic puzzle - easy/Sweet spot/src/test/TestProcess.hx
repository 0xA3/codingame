package test;

import Main;
import Std.parseInt;

using Lambda;
using StringTools;
using buddy.Should;

@:access(Main)
class TestProcess extends buddy.BuddySuite {
	
	public function new() {
		
		describe( "Test process", {
			it( "First attempt with A-bomb", {
				Main.process( firstAttemptWithABomb ).should.be( firstAttemptWithABombResult );
			});
			it( "First attempt with H-bomb", {
				Main.process( firstAttemptWithHBomb ).should.be( firstAttemptWithHBombResult );
			});
			it( "Real case : A/H-bomb", {
				Main.process( realCaseAHBomb ).should.be( realCaseAHBombResult );
			});
			it( "First attempt with B-bomb", {
				Main.process( firstAttemptWithBBomb ).should.be( firstAttemptWithBBombResult );
			});
			it( "Small map", {
				Main.process( smallMap ).should.be( smallMapResult );
			});
			it( "Real case : all bombs", {
				Main.process( realCaseAllBombs ).should.be( realCaseAllBombsResult );
			});
			it( "Damaged map", {
				Main.process( damagedMap ).should.be( damagedMapResult );
			});
			it( "No explosions", {
				Main.process( noExplosions ).should.be( noExplosionsResult );
			});
		});
			
	}

	static function parseInput( input:String ) {
		final lines = input.replace( "\t", "" ).replace( "\r", "" ).split( "\n" );
		return lines.slice( 1 );
	}
	
	static function parseResult( input:String ) {
		return input.replace( "\t", "" ).replace( "\r", "" );
	}
	
	final firstAttemptWithABomb = parseInput(
		"15
		000000000000000
		A00A0000000000A
		000000000000000
		000000000000000
		000000000000000
		000000000000000
		000000000000000
		000000000000000
		0000000A0000000
		000000000000000
		000000000000000
		000000000000000
		000000000000000
		000000000000000
		A000000000000AA"
	);

	final firstAttemptWithABombResult = parseResult(
		"333332100001233
		A33A3210000123A
		333332100001233
		222222100001222
		111111100001111
		000011111110000
		000012222210000
		000012333210000
		0000123A3210000
		000012333210000
		000012222210000
		111111111111111
		222100000012222
		332100000012333
		A321000000123AA"
	);

	final firstAttemptWithHBomb = parseInput(
		"18
		H00000000000000000
		000000000000000H00
		000000000000000000
		00000000H000000000
		000000000000000000
		000000000000000000
		000000000000000000
		000000HH0000000000
		000000000000000000
		000000000000000000
		000000000000000H00
		000000000000000000
		000000000000000000
		000000000000000000
		HHH00000000H000000
		000000000000000000
		000000000000000000
		000000000000000000"
	);

	final firstAttemptWithHBombResult = parseResult(
		"H55505555555555555
		555505555555555H55
		555505555555555555
		55550555H555555555
		000555555555555555
		000555555555000000
		000555555555000000
		000555HH5550555555
		000555555550555555
		000555555550555555
		000555555550555H55
		555555005555555555
		555555005555555555
		555555005555555555
		HHH55500555H555000
		555555005555555000
		555555005555555000
		555555005555555000"
	);

	final realCaseAHBomb = parseInput(
		"22
		0000000000000000000000
		0000000000000000000000
		0000000AAHAA0000000000
		0000000000000000000000
		0000000000000000000000
		000000000000000000000A
		0000000000000000000000
		0000000000000000000000
		000A000000000000000000
		000000000HAH0000A00000
		0000000000000000000000
		A000000000000000000000
		A000000000000000000000
		0000000000000000000000
		0000000000000000000000
		0000000000000000000000
		A000000000000000000H00
		0000000000000000000000
		0000000000A00000000000
		0000000000000000000000
		0000000000000000000000
		H00000000000000000000A"
	);

	final realCaseAHBombResult = parseResult(
		"0000125555555210000000
		0000125555555210000000
		0000125AAHAA5210001111
		0000125555555210001222
		0000125555555210001233
		111111555555511000123A
		1222225555555551111233
		1233325555555552222222
		123A325555555553332111
		223332555HAH5553A32100
		3322225555555553332100
		A321115555555552222100
		A321005555555551111100
		3321000000000000555555
		2221000000000000555555
		3321000111111100555555
		A321000122222100555H55
		3321000123332100555555
		5555000123A32100555555
		5555000123332100555555
		5555000122222100001233
		H55500011111110000123A"
	);

	final firstAttemptWithBBomb = parseInput(
		"22
		000000000000000000000A
		00000B0000000000000000
		0000000000000000000000
		0B0000000000000000000B
		000000000000000000B000
		0000000000000000000000
		000000000000000000000B
		0000000000000000000000
		000000B00000000A000000
		000000000000000000000B
		0000000000000000000000
		000000B000000000000000
		000000000000000000000B
		0000000000000000000000
		000000000H000000000000
		000000000000000000000B
		0000000000000000000000
		A000000000000000000000
		A00000000000B000000000
		A000000000000000000000
		HHHH00000000000000A00H
		00000000A0000000000000"
	);

	final firstAttemptWithBBombResult = parseResult(
		"000000000000000000123A
		00000B0000000000001233
		0000000000000000001223
		0B0000000000000000123B
		000000000000000000B003
		0000001000001111111003
		000000200000122222123B
		0000003000001233321003
		000123B32100123A321003
		000000300000123332123B
		0000003000001222221003
		000123B555555111111003
		000000555555500000123B
		0000005555555000000003
		111100555H555000000003
		222100555555500000123B
		3321005555555000000003
		A555555555555001115555
		A55555511111B001225555
		A555555222210001235555
		HHHH55533321000123A55H
		55555553A3210001235555"
	);

	final smallMap = parseInput(
		"5
		00000
		00000
		00A00
		00000
		00000"
	);

	final smallMapResult = parseResult(
		"22222
		23332
		23A32
		23332
		22222"
	);

	final realCaseAllBombs = parseInput(
		"25
		0000000000000000000000000
		00000000000HHH00000000H00
		00H0000000000000000000000
		0000000000000000000000000
		0000000000000000000000000
		00000000000000000000A0000
		000000000000000B000000000
		00000H0000A00000000000000
		00000000000000000000H0000
		0000000000000000000000000
		0000000000000000000000000
		00A0000000000000000000000
		0000000000000000000000000
		00000B0000000000000000000
		0000000000000000000000000
		0000000000000000000A00000
		00000B00BBB00000000000000
		0000000000000000000000000
		0A00000000000000000000000
		0000000000000000000000000
		0000000000000000000000000
		000000000000A000000000000
		0000000000000000000000000
		000B000000000000000000000
		000000000000000000000H000"
	);

	final realCaseAllBombsResult = parseResult(
		"5555550055555555500555555
		55555500555HHH55500555H55
		55H5550055555555511555555
		5555550055555555512555555
		5555555555555555512555555
		55555555522221000555A5550
		005555555333210B055555550
		00555H5553A32100055555550
		11555555533321000555H5550
		2255555552222100055555550
		2355555551111100055555550
		23A3220000000000055555550
		2333230000000000111111100
		22223B3211100000122222100
		1111130022200000123332100
		1111130033300000123A32100
		22223B33BBB32100123332100
		3332130033300000122222100
		3A32120022211111111111100
		3332110011222221000000000
		2222100001233321000000000
		111110000123A321005555555
		0000000001233321005555555
		000B000001222221005555555
		000000000111111100555H555"
	);

	final damagedMap = parseInput(
		"15
		A07000000000000
		007000070000000
		777003009000000
		00000000000000A
		000000000000000
		000000000000000
		004000009000000
		0000A00H0000000
		006000000000000
		000000080000000
		A00000000000000
		000000000000000
		000000000000030
		000000000000000
		00100000H000000"
	);

	final damagedMapResult = parseResult(
		"A37100000001111
		337100070001222
		777103009001233
		11110000000123A
		011155555551233
		012255555551222
		014355559551111
		1123A55H5550000
		226355555550000
		332255585550000
		A32155555550000
		332105555555000
		222105555555030
		111105555555000
		00100555H555000"
	);

	final noExplosions = parseInput(
		"7
		0000000
		0000000
		0000000
		000B000
		0000000
		0000000
		0000000"
	);

	final noExplosionsResult = parseResult(
		"0000000
		0000000
		0000000
		000B000
		0000000
		0000000
		0000000"
	);

}

