package test;

import Main;
import Std.parseInt;

using buddy.Should;
using StringTools;
using Lambda;

@:access(Main)
class Tests extends buddy.BuddySuite {
	
	public function new() {
		
		describe( "Test process", {
			
			it( "Example", {
				final lines = parse( example );
				Main.process( lines ).should.be( "0123456789" );
			});
			
			it( "Zeroes", {
				final lines = parse( zeroes );
				Main.process( lines ).should.be( "000" );
			});
			
			it( "Short number", {
				final lines = parse( shortNumber );
				Main.process( lines ).should.be( "625" );
			});
			
			it( "Long number", {
				final lines = parse( longNumber );
				Main.process( lines ).should.be( "0123456789876543210" );
			});
			
			it( "Super long number", {
				final lines = parse( superLongNumber );
				Main.process( lines ).should.be( "237389337121547466924987052672446420321176437003078093963070299640757162205598955020290931795852211942479861282312311682922250127200851342218150489381701122349790033990371402818868076634984026824692811524647944355525740470601976785315383707178765815008604262266466240524489067951999030191438783616605" );
			});
			
			
		});

	}

	static function parse( input:String ) {
		final lines = input.split( "\n" )
			.map( line -> line.replace( "\r", "" )) // remove carriage return
			.map( line -> line.replace( "\t", "" )) // remove tab
			.mapi(( i, line ) -> i == 0 ? line : line.substr( 1 )); // in lines 1 and 2 remove first space
		
		return lines;
	}

	final example =
	" _     _  _     _  _  _  _  _ 
	 | |  | _| _||_||_ |_   ||_||_|
	 |_|  ||_  _|  | _||_|  ||_| _|";

	final zeroes =
	" _  _  _ 
	 | || || |
	 |_||_||_|";

	final shortNumber =
	" _  _  _ 
	 |_  _||_ 
	 |_||_  _|";

	final longNumber =
	" _     _  _     _  _  _  _  _  _  _  _  _     _  _     _ 
	 | |  | _| _||_||_ |_   ||_||_||_|  ||_ |_ |_| _| _|  || |
	 |_|  ||_  _|  | _||_|  ||_| _||_|  ||_| _|  | _||_   ||_|";

	final superLongNumber =
	" _  _  _  _  _  _  _  _  _     _     _     _     _  _  _  _     _  _  _  _  _  _  _  _  _        _     _  _  _  _        _  _     _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _     _  _  _  _     _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _     _  _  _  _  _  _  _        _     _     _  _  _  _     _  _  _  _     _  _        _  _  _  _  _  _  _  _  _     _  _  _  _  _  _  _     _     _  _     _     _  _     _  _  _  _     _  _        _  _  _     _  _  _  _  _  _  _  _  _  _  _  _        _  _  _     _  _  _  _  _  _  _  _  _     _  _     _  _  _  _  _     _  _  _  _        _  _     _     _  _        _  _  _  _  _  _  _     _     _  _  _  _     _  _  _  _  _  _  _     _  _  _  _  _  _  _     _  _  _  _  _  _     _  _  _  _  _  _     _  _  _  _  _  _     _  _  _     _  _  _        _  _  _  _  _  _  _     _  _  _  _  _  _     _        _  _  _  _  _  _     _  _  _  _ 
	  _| _|  | _||_||_| _| _|  |  | _|  ||_ |_|  ||_||_ |_ |_| _||_||_||_|  || ||_  _||_   | _||_||_||_ |_| _|| | _| _|  |  |  ||_ |_| _|  || || | _|| |  ||_|| ||_| _||_||_  _|| |  || | _||_||_||_ |_|| |  ||_   |  ||_  _| _|| ||_ |_ |_||_||_||_ |_ | | _|| | _||_|| ||_| _|  |  ||_||_ |_||_  _| _|  |  ||_||_| _||_|  ||_||_||_   | _||_| _| _|  | _| _|  |  ||_ |_| _||_| _| _| _||_ | |  | _|  | _|| || ||_||_   | _||_| _| _|  ||_|  ||_ | ||_||_||_| _||_|  |  || |  |  | _| _| _||_||_|  ||_|| || | _| _||_||_|| | _|  |  ||_|| | _||_|  ||_||_||_ |_|| |  ||_ |_  _||_||_||_||_|| | _||_ |_| _||_||_ |_| _||_|  |  ||_  _||_||_ |_|  ||_||_||_| _||_ |_ |_  _||_   ||_|| ||_|  || ||_ | |  ||_|  ||_   ||_||_  _|  ||_  _||_| _|  || |  |  |  ||_|  ||_ |_ |_|  ||_ | || ||_||_ | ||_| _||_  _| _||_ |_ |_||_ |_  _||_|| ||_  _||_||_||_||_|| ||_   ||_||_   ||_||_||_|| | _|| |  ||_|  ||_| _||_|  ||_| _||_   ||_ |_ | ||_ 
	 |_  _|  | _||_| _| _| _|  |  ||_   | _|  |  |  ||_||_| _||_   | _||_|  ||_| _||_ |_|  ||_   |  ||_|  ||_ |_| _||_   |  |  ||_|  | _|  ||_||_| _||_|  ||_||_| _| _| _||_| _||_|  ||_||_  _| _||_|  ||_|  | _|  |  ||_||_ |_ |_| _| _| _||_| _| _| _||_||_ |_||_  _||_| _| _|  |  | _| _||_| _||_ |_   |  | _|  ||_   |  | _||_||_|  ||_ |_||_  _|  ||_  _|  |  ||_||_||_  _||_ |_ |_  _||_|  ||_   ||_ |_||_||_| _|  | _|  ||_ |_   ||_|  | _||_|  ||_| _| _||_|  |  ||_|  |  ||_ |_  _|  | _|  | _||_||_| _| _| _| _||_| _|  |  |  ||_||_ |_|  ||_||_||_||_||_|  ||_||_| _|  | _||_|  ||_||_ |_||_||_   ||_| _||_ |_|  |  | _||_   ||_|  |  | _|  |  | _| _| _| _||_  _|  |  ||_|  |  ||_||_||_|  | _|  ||_|  ||_| _| _|  | _| _||_| _|  ||_|  |  |  ||_|  ||_| _||_|  | _||_||_||_||_||_|  ||_ |_||_ |_ |_||_|  ||_||_||_   ||_| _||_   |  ||_| _||_||_|  | _| _|  | _| _| _||_| _||_|  | _|  |  | _||_|  ||_| _||_|  ||_||_||_| _|";

}

