package test;

import Std.parseInt;

using StringTools;
using buddy.Should;

@:access(Main)
class TestProcess extends buddy.BuddySuite {
	
	public function new() {
		
		describe( "Test process", {
			
			it( "Zero", { Main.process( zero ).should.be( 0 ); });
			it( "Simple 1", { Main.process( simple1 ).should.be( 25 ); });
			it( "Simple 2", { Main.process( simple2 ).should.be( 2 ); });
			it( "Simple 3", { Main.process( simple3 ).should.be( 5 ); });
			it( "Simple 4", { Main.process( simple4 ).should.be( 6 ); });
			it( "Simple 5", { Main.process( simple5 ).should.be( 4 ); });
			it( "Test 1", { Main.process( test1 ).should.be( 1600 ); });
			it( "Test 2", { Main.process( test2 ).should.be( 1056 ); });
			it( "Test 3", { Main.process( test3 ).should.be( 449 ); });
			it( "Test 4", { Main.process( test4 ).should.be( 368 ); });
			it( "Test 5", { Main.process( test5 ).should.be( 2440 ); });
			it( "Test 6", { Main.process( test6 ).should.be( 4832 ); });

		});

	}

	static function parseInput( input:String ) {
		final lines = input.replace( "\t", "" ).replace( "\r", "" ).split( "\n" );
		return lines.slice( 1 ).map( line -> line.split("").map( char -> char.charCodeAt( 0 ) - 64 ));
	}

	final zero = parseInput(
		"3
		XXX
		XXX
		XXX"
	);

	final simple1 = parseInput(
		"3
		ZZZ
		ZAZ
		ZZZ"
	);

	final simple2 = parseInput(
		"3
		XZZ
		ZXZ
		ZZZ"
	);

	final simple3 = parseInput(
		"5
		CCCCC
		CAAAC
		CACAB
		CCCCC"
	);

	final simple4 = parseInput(
		"5
		CCCCC
		CACAC
		CACAB
		CCCCC"
	);

	final simple5 = parseInput(
		"5
		CCCCC
		CACBC
		CACBA
		CCCCC"
	);

	final test1 = parseInput(
		"10
		ZZZZZZZZZZ
		ZAAAAAAAAZ
		ZAAAAAAAAZ
		ZAAAAAAAAZ
		ZAAAAAAAAZ
		ZAAAAAAAAZ
		ZAAAAAAAAZ
		ZAAAAAAAAZ
		ZAAAAAAAAZ
		ZZZZZZZZZZ"
	);

	final test2 = parseInput(
		"10
		ZZZZZZZZZZ
		ZRRRRRRRRZ
		ZRRRRRRRRZ
		ZRRRRRRRRZ
		ZFFFFFFFFZ
		ZDDDDDDDDZ
		ZDDDDDDDDZ
		ZDDDDDDDDZ
		ZDDDDDDDDZ
		ZZZZZZZZZZ"
	);

	final test3 = parseInput(
		"10
		XXXXXXXXXX
		XSSSSRAAAX
		XSSSSRAAAX
		XSSSSRAAAX
		XXXXXCXXXX
		XSSSSCBBBX
		XSSSSCBBBX
		RSSSSCBBBX
		XSSSSCBBBX
		XXXXXXXXXX"
	);

	final test4 = parseInput(
		"20
		DDDDDDDDDDDDDDDDDDDD
		DAAAAAAAAAAAABBBCCCC
		DAAAAAAAAAAAABBBDDDD
		DAAAAAAAAAAAABBBDDDD
		DAAAAAAAAAAAABBBEEFF
		GGGGGGGGGHHHIIJJEEFF
		GGGGGGGGGHHHIIJJEEFF
		KKKKKLLLLHHHIIJJMMMM
		KKKKKLLLLNNOOPPPMMMM
		QQQQRRSSSNNOOPPPTTTT
		QQQQRRSSSNNOOUUUTTTT
		VVVVRRWWWNNXXUUUYYYY
		VVVVRRWWWZZXXAAAYYYY
		VVVVBBBBBZZXXAAAYYYY
		VVVVBBBBBZZCCCDDEEFR
		GGGHHHIIIJJCCCDDEEFR
		GGGHHHIIIJJKKKDDEEFR
		GGGHHHIIIJJKKKDDEEFR
		LLLLLLLLLLLLLMMMMNNR
		FFFFFFFFFFFFFFFFFFFF"
	);

	final test5 = parseInput(
		"30
		YENZRGRNFKINMCAGFMMGJWVZZRVCWQ
		KKBAQPBNSWUXIDFHDZYNTOGTSAEKVS
		EGTLNXYWRHLLYTNGOYBLULNOIGVMFV
		WKNZBYVPCWLXZSESPZKIACDBLGNTJZ
		MUREWDLLJVTOGPOHWPGIRUDOLEGTRL
		LZKAVBAYBMNMOAAQGQKDCHGNOIBNNZ
		URHBKIZDYSCPSGEHRIGIFEUYAWLYLX
		YASRATWMWKORQIJYHKCYSWRLZIYBYX
		YCDYJTUOFHCWTEXEWIOJFUVVFSJLWL
		GUAWVRQETAUNHQLMARPFPFXCRRGVOI
		TGMCABQJLFBRCYDQMWEKZJBYBFMADN
		GZMUVJKJFZSEWAMIIZWPMWLOQRQJJH
		JOCNZHLCORENIIJQINMRKZDOKPYJNW
		MDGUSXCCKXWQGCFZRBDFGTCHHBFGSB
		QYAZGXUEUMZFUDCSGJZUFGHGUUBWIH
		NUVZDLUUYJYRGQSYHJJUKIAJGEKUQN
		CNBQBDXAFDXNMLSZUOCLOCGYKVOVNE
		PARZOFUPFZTGRITQXCMOZKXHCKBRMA
		IVOKPXQGEHOMLSWIEATJUXAEDBKUFJ
		XVLSZSAOWZOEQCZWBKOTWHNGFQNOQN
		ORYFEBJITOHJHJZHCLJNFZRGLHQRJA
		KZYENAUZGROOZIPCBKRBUNJWUPJRIG
		YNEPCOUEPQFEGGXSTLKWKJJJJORUZB
		GFNHOUWLRQVESEOFDMBQQDCACXLGYF
		EBNNJKZYYOGGVUIDIEROUTFNNSBBXB
		BHRKDBVBBLEMPYVOOKGUPUGAQNMBGT
		ZDOLHRCSCLHTIXRPCTZMFQXCRNNMUT
		SXBRAATOMKNRFGEMNEZKCSXMPKKMJV
		DKMJHUYLWSHBIXJHMXEOSTLMEXUPQB
		SZJSOCBQVELVOOWHGJCTSQOYNFTOKP"
	);

	final test6 = parseInput(
		"40
		XZADHVCOMBACBBHTEYCCXJDNNLMYYDVRQSAOWNOI
		RZTKUWUMFVHBNEXKYVLQDRUFYAQKNIAIMJKBTGTA
		EHAOTIYXUEVIQOXLMWTXJTXHNEZIBUQDRHGWTJOV
		SMNHPIQCWIHIOHQBNMINYYUPKZWHSUFWKUMTENJA
		VLFBINPJBIIXNHREZHUCUEIXMDOBMRMYYFIGTYEA
		WRYSXJRQCGWOCBGQQORMTHLRYRQHACUUNRCHIRFV
		JZBZWXKXMCTICXQALXZKHNXMTGPXXTQMMLHPEHGL
		TTSURBLRCWGWSTVVELLVTCLJCRKTFSDBAOLGRHHN
		OQLAKHARLJNJDIYHWSJRETNNZOVXEDOGNFJBPSXT
		GZSTCXPBKPARDYSQGUUCKCSSPQAIKNVVFIXHWKUK
		KJIAHTGEOGFBMTCQMZFCZGGTALBHOIZDOAEAVUKX
		NABDPPDWUGXPMLOFHJBZJFNALQLXWNSPTCEOWDGD
		ELAECPECRDVSKPUWUECZONMBZONPMZVFJQKCYHLC
		XTFRWZHKFTZOCHDBVJZPPPHXYVBQEAWBOGEFXYIL
		JIBXPJDKZPLTINBAOBUBZIUSISQPQZKUXZEGFHVV
		BGVLWHNHYJNRMTQWWCLDGQVFNSHYDPRESKBWJMBN
		SUFTWVUHUNNBXLBLVPHFNUADPBZIYOCMMJTOGBRU
		VXUQTYNINPBJMLHPKFPDVCBYZCAKWASDPJEFYQPP
		FUOSGBXGUZSODPITUAYOUFGCTYOBQCRCPFQMXFHY
		JIHWAPIPQEKHFDULYPVKZVEOHWFZQJVKVIGIQRLI
		DPIWHKRZVKYOEINTAVFMPBXLVYMGDHCSZIQPELHM
		CJTVHFCMJBOGXWYWAHWXRASNTJFTAXCSJOELOYIN
		ARCQUIJKAJIPLKQNFTYQZFMMHADTCBPRQQUVJXOV
		OEUOOYJNXOUNFZWOOSOYCDISWAMEVFYZFTDCFDFG
		OTQRWRPTUSIKRRYKJVEYGSXQSEGNNPQPVKJJDWDU
		RBIIAEUNUCRKWZWNRLCBRVBFIOWWDBXLWTMBGFIW
		UWYVUNGLTPOAUIVZTFDNAVGPZWSVOIZGBDXNFWKF
		PRNRBRKQTKZPZRPXTJXZCACJFAKTGOVOWRXIQIEY
		ZEJHECJGTJYSAVCBXLKUCDVIGQQGRXNSCOFZSRZJ
		RVUJLHKDVNTYXCWGKPPSIWWTSOJXUYVAEVIFOXKH
		PGLLUAICYQRASURUOGTJNKHAXJLNOGOKXQHQYKRS
		NSVKBFGQFQHPCPUENNCPNWEEJUGUMVFUVXXFMQBA
		KTXYSCTFRGDRRFTKRQFDQTLFNFWRDOMVTQLRLIOX
		BQMCCWRYMHCAMSSRGRPCEPZTYIWAMYQCHSBCAKIM
		LTURGHLZQJZSTFXPPVBHZKKNAMTYPHCVEBFKBABY
		JGYXBZRDJEYUCGFYYZLZXBLUKFHMAJYIDKKWFKRE
		XLLTZANFRHDLEGTCSHWEJYNXNVGXJAJMXPJNVGSB
		WJQQOLKPVIYUFFEMFOJHTJCWASTILFGGHWUECWAJ
		HIQTTIUXRSIKZIBXVKMXEKQKBUGFUMEZGZXCBKQE
		DEHPKLWEXHGMYRYZTGHUAQVIHUZKRTVTARLKCVBN"
	);

}

